generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// COMMON

enum TTranslation {
  EN
  FR
}

// PROJECTS

enum TProjectTag {
  PYTHON
  VIDEO_GAME
  JAVASCRIPT
  TYPESCRIPT
  GOLANG
  RUST
  CPP
  C
  FRONTEND
  BACKEND
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  username String?
  enabled Boolean @default(true)
}

model Project {
  id String @id @default(uuid())
  translations ProjectTranslation[]
  cover String?
  coverAlt String?
  github String?
  website String?
  tags ProjectTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectTranslation {
  id String @id @default(uuid())
  lang TTranslation
  title String
  description String
  markdownId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project Project @relation(fields: [projectId], references: [id])

  @@unique([projectId, lang])
}

model ProjectTag {
  id String @id @default(uuid())
  value TProjectTag @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project Project[]
}

// ARTICLES

enum TArticleTag {
  PYTHON
  VIDEO_GAME
  JAVASCRIPT
  TYPESCRIPT
  GOLANG
  RUST
  CPP
  C
  FRONTEND
  BACKEND
  IA
  DEVELOPPERS
}

model Article {
  id String @id @default(uuid())
  tags ArticleTag[]
  cover String?
  coverAlt String?
  translations ArticleTranslation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArticleTranslation {
  id String @id @default(uuid())
  lang TTranslation
  title String
  preview String
  markdownId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articleId String
  article Article @relation(fields: [articleId], references: [id])

  @@unique([articleId, lang])
}

model ArticleTag {
  id String @id @default(uuid())
  value TArticleTag @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articles Article[]
}

model Markdown {
  id String @id @default(uuid())
  content String
}

model Image {
  id String @id @default(uuid())
  content String
  public Boolean @default(false)
}